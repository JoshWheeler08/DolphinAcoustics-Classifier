@startuml

title __TONALS's Class Diagram__\n

  namespace tonals {
    class tonals.TonalBinaryInputStream {
        + datastream : DataInputStream
        + tonals : LinkedList<tonal>
        ~ fbit_mask : short
        - buffstream : BufferedInputStream
        - filestream : FileInputStream
        + getHeader()
        + getTonals()
        + readTonalStream()
        + tonalBinaryInputStream()
    }
  }
  

  namespace tonals {
    class tonals.TonalBinaryOutputStream {
        + datastream : DataOutputStream
        - filestream : FileOutputStream
        + TonalBinaryOutputStream()
        + TonalBinaryOutputStream()
        + close()
        + getHeader()
        + setHeader()
        + write()
    }
  }
  

  namespace tonals {
    class tonals.TonalHeader {
        {static} + DEFAULT : short
        {static} + DET_VERSION : short
        {static} + FREQ : short
        {static} + HEADER_STR : String
        {static} + PHASE : short
        {static} + SNR : short
        {static} + TIME : short
        ~ bitMask : short
        ~ comment : String
        ~ headerSize : int
        ~ userVersion : short
        ~ version : short
        + TonalHeader()
        + TonalHeader()
    }
  }
  

  namespace tonals {
    class tonals.tfnode {
        {static} + HzPerkHz : double
        + earliest_pred : double
        + freq : double
        + phase : double
        + predecessors : LinkedList<tfnode>
        + snr : double
        + successors : LinkedList<tfnode>
        + time : double
        {static} ~ serialVersionUID : long
        {static} - free_list : tfnode
        + best_path()
        + best_predecessor()
        + chain_backward()
        + chain_forward()
        + chained_backward()
        + chained_backwardN()
        + chained_forward()
        + chained_forwardN()
        + compareByTime()
        + compareTo()
        {static} + create()
        {static} + create()
        + find()
        + is_junction()
        + ismember()
        + iter_forward()
        + iterator_predecessors()
        + on_single_path()
        {static} + recycle()
        + slope_est()
        + tfnode()
        + tfnode()
        + toString()
        + union()
        ~ dphase_est()
        ~ slope_est_avg()
        - init_common()
    }
  }
  

  namespace tonals {
    class tonals.tonal {
        {static} + TimeOrder : Comparator<tonal>
        ~ Pi2 : double
        {static} ~ serialVersionUID : long
        {static} - toStringFirstN : int
        {static} - toStringLastN : int
        + clone()
        + compareSpanTo()
        + compareTo()
        + dphase_est()
        + duration()
        + equals()
        + get_duration()
        + get_freq()
        + get_phase()
        + get_snr()
        + get_time()
        + get_time_startEnd()
        {static} + get_toStrFirstN()
        {static} + get_toStrLastN()
        + merge()
        + merge_prepend()
        + overlapping_tonals()
        + presence()
        + set_snr()
        {static} + set_toStrFirstN()
        {static} + set_toStrLastN()
        + slope_avg()
        + toString()
        + toString()
        + tonal()
        + tonal()
        + tonal()
        + tonal()
        {static} + tonalsLoad()
        ~ get_phase_coherency()
        ~ tonal()
    }
  }
  

  namespace tonals {
    class tonals.tonal.phase_coherency {
        + mean : double
        + n : int
        + var : double
        + phase_coherency()
        + toStr()
    }
  }
  

  namespace tonals {
    class tonals.tonalSortByTime {
        + compare()
    }
  }
  

  tonals.TonalBinaryInputStream o-- tonals.TonalHeader : hdr
  tonals.TonalBinaryOutputStream o-- tonals.TonalHeader : hdr
  tonals.tfnode .up.|> java.io.Serializable
  tonals.tfnode .up.|> java.lang.Comparable
  tonals.tfnode o-- tonals.tfnode : next_free
  tonals.tfnode o-- tonals.tfnode : set_root
  tonals.tonal .up.|> java.lang.Comparable
  tonals.tonal -up-|> java.util.LinkedList
  tonals.tonal +-down- tonals.tonal.phase_coherency
  tonals.tonalSortByTime .up.|> java.util.Comparator


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
